.presentation {
	min-height: 13px;
	min-width: 13px;
	border: 1px solid rgba(140, 140, 140, 0.58);
	box-shadow: 5px 5px 8px #aeaeae;
}

img {
	max-width: 100%;
}

.client1>.presentation {
	background-color: yellow;
}

.client2>.presentation {
	background-color: rgb(170, 223, 248);
}

.client3>.presentation {
	background-color: rgb(158, 231, 55);
}

.client4>.presentation {
	background-color: rgb(255, 172, 251);
}

.client5>.presentation {
	background-color: rgb(255, 218, 129);
}

.client6>.presentation {
	background-color: rgb(248, 191, 91);
}

.pGroup, .pResourceLink {
	min-height: 13px;
	min-width: 13px;
}


.error input, .error select, .error textarea {
	background-color: red;
}
.removeButton, .maximizeButton, .minimizeButton, .dragButton, .iconButton {
	cursor: pointer;
	min-width: 16px;
	min-height: 16px;
	display: block;
	float:right;
	position: relative;
	margin-right: 2px;
	transform: scale(0.7, 0.7);
}
.buttonView > span::before, .buttonView> span::after {
	top: 3px;
	right: 2px;
}
.removeButton::before, .removeButton::after, .minimizeButton::before, .minimizeButton::after,
.maximizeButton::before, .maximizeButton::after,
.infoButton::before, .infoButton::after, .dragButton::before, .dragButton::after,
.iconButton::before, .iconButton::after {
	background: url("../images/icons2.svg") no-repeat scroll;
	content: "";
	height: 16px;
	width: 16px;
	position: absolute;
}
.iconButton.tool::before {
	background-position: -144px -32px;
	opacity: 1;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.iconButton.tool:hover::before {
	opacity: 0;
}

.iconButton.tool::after {
	background-position: -144px -16px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
}

.iconButton.tool:hover::after {
	opacity: 1;
}

.removeButton::before {
	background-position: -32px -16px;
	opacity: 1;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.removeButton:hover::before {
	opacity: 0;
}

.removeButton::after {
	background-position: -32px -0px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
}

.removeButton:hover::after {
	opacity: 1;
}

.minimizeButton::before {
	background-position: -176px 0px;
	opacity: 1;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.minimizeButton:hover::before {
	opacity: 0;
}

.minimizeButton::after {
	background-position: -176px -16px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
}

.minimizeButton:hover::after {
	opacity: 1;
}
.maximizeButton::before {
	background-position: -160px 0px;
	opacity: 1;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.maximizeButton:hover::before {
	opacity: 0;
}

.maximizeButton::after {
	background-position: -160px -16px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
}

.maximizeButton:hover::after {
	opacity: 1;
}
.dragButton::before {
	background-position: -193px -0px;
	opacity: 1;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.dragButton:hover::before {
	opacity: 0;
}

.dragButton::after {
	background-position: -193px -16px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
	cursor: move;
}

.dragButton:hover::after {
	opacity: 1;
}

.beeingDragged {
	opacity: 0.5;
}

.workView .repeatingElement {
	display: flex;
}

.workView .repeatingElement > * {
	flex: 1;
}
.buttonView {
/* 	needed for tests to see that it is visible */
	display: inline-block;	
}
.buttonView:empty {
	display: none;
}

.workView .repeatingElement>.buttonView {
	flex: 0 1 0;
}

.pVar {
	min-width: 30px;
	min-height: 24px;
	display: inline-block;
}
.pVar:hover, .pCollVar:hover, .pVar.infoActive, .pCollVar.infoActive, .pRecordLink.infoActive,
.pGroup2:hover, .pGroup.infoActive {
	background-color: rgba(0, 129, 198, 0.1);
}
.pGroup:hover, .repeatingElement:hover {
	background-color: rgba(0, 129, 198, 0.1);
}
.pVar.infoActive  > .infoButton::before,
.pCollVar.infoActive  > .infoButton::before,
.pGroup.infoActive  > .infoButton::before,
.pRecordLink.infoActive  > .infoButton::before {
	opacity: 1;
}

.pVar span {
	font-size: .8rem;
}
.workView .pVar, .workView .pCollVar {
	display: flex;
	flex-wrap: wrap;
}

.workView .pVar > :first-child, .workView .pCollVar > :first-child {
	flex: 1;
	margin: .2em 0;
}

.workView .pRecordLink,
.workView .pGroup {
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-end;
}

.workView .pRecordLink > :nth-child(1n) ,
.workView .pGroup > :nth-child(1n) {
	flex: 1 0 100%;
	order: 2;
}
.workView .pRecordLink > :nth-child(2),
.workView .pGroup > :nth-child(2) {
	flex: 1;
	margin: .2em 0;
	order: 0;
}
.workView .pRecordLink > :first-child,
.workView .pGroup > :first-child {
	flex: 0 1 0;
	order: 1;
}
.workView .pRecordLink > :first-child + .childrenView,
.workView .pGroup > :first-child + .pChildRefHandler{
/* 	TODO: IS THIS OK? */
	flex: 0 1 100%;
	
	order: 1;
}

.infoButton {
	min-height: 1em;
	min-width: 1.3em;
	margin-top: .3em;
}
.infoButton {
	cursor: pointer;
	transform: scale(0.7, 0.7);
	width: 16px;
	height: 16px;
}

 .infoView {
	flex: 0 0 100%;
}

.infoView span {
	display: block;
	font-size: 0.7rem;
}

.jsClient .menuView .pVar .infoButton, .menuView .pVar:hover > .infoButton::before,
.menuView .pGroup:hover > .infoButton::before,
.menuView .infoButton::before, .menuView .infoButton::after,
.menuView .infoButton:hover::after  {
	display: none;
}

.workView .pVar:hover > .infoButton::before, .workView .pRecordLink:hover > .infoButton::before, 
 input:focus + .infoButton::before ,
.workView .pCollVar:hover > .infoButton::before,  select:focus + .infoButton::before,
textarea:focus + .infoButton::before, .workView .pGroup:hover > .infoButton::before {
	opacity: 1;
}
	
	
.infoButton::before {
	background-position: -63px -0px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 100;
}

.infoButton:hover::before {
	opacity: 0;
}

.infoButton::after {
	background-position: -63px -16px;
	opacity: 0;
	transition: opacity 0.5s ease 0s;
	z-index: 101;
}

.infoButton:hover::after {
	opacity: 1;
}

.pRepeatingContainer {
	border: 1px dashed green;
	display: block;
}

.pChildRefHandler {
	display: block;
}
.workView .pChildRefHandler.tenChildStyle {
	flex: 1 1 100%;
	background-color: lightgreen;
}
.workView .pChildRefHandler.nineChildStyle {
	flex: 1 1 90%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.eightChildStyle {
	flex: 1 1 80%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.sevenChildStyle {
	flex: 1 1 70%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.sixChildStyle {
	flex: 1 1 60%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.fiveChildStyle {
	flex: 1 1 50%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.fourChildStyle {
	flex: 1 1 40%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.threeChildStyle {
	flex: 1 1 30%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.twoChildStyle {
	flex: 1 1 20%;
	background-color: lightyellow;
}
.workView .pChildRefHandler.zeroChildStyle {
	flex: 1;
	background-color: lightyellow;
}
.minimized .buttonView {
	display: none;
}

.presentation .text {
	margin: 4px;
	display: inline-block;
}
.presentation .text.h1TextStyle {
	font-size: 2rem;
}
.presentation .text.h2TextStyle {
	font-size: 1.5rem;
}
.presentation .text.h3TextStyle {
	font-size: 1rem;
}
.presentation .text.h4TextStyle {
	font-size: 0.8rem;
}
.presentation .text.h5TextStyle {
	font-size: 0.7rem;
}
.presentation .text.h6TextStyle {
	font-size: 0.6rem;
}
.presentation .text.italicTextStyle {
	font-style: italic;
}
.presentation .text.bodyTextStyle {
/* 	font-size: 2rem; */
}
.pRecordLink .text {
	display: block;
}

.repeatingElement + .repeatingElement {
	padding-top: 5px;
}
.repeatingElement:first-child {
	margin-top: 5px;
	border-top: 1px dashed #0082c9;
	padding-top: 5px;
}
.repeatingElement {
	border-bottom: 1px dashed #0082c9;
}

.editView .repeatingElement:last-child {
	margin-bottom: 5px;
}
.repeatingElement:first-child:last-child {
	border-top: none;
	border-bottom: none;
	padding-top: 0;
	margin-top: 0;
}
.jsClient .workView .recordViewer {
	flex: 1 0 calc(100% - 2px);
	border: 1px dotted green;
}

.jsClient .workView .repeatingElement .compactChildStyle {
	display: unset;
}
.jsClient .workView .repeatingElement .compactChildStyle .pGroup {
	display: unset;
}
.jsClient .workView .repeatingElement .compactChildStyle span {
	display: inline;
}
.jsClient .workView .repeatingElement .compactChildStyle .buttonView {
	display: none;
}
