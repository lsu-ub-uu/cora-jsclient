<!-- ~ Copyright 2015, 2018 Uppsala University Library ~ ~ This file is part 
	of Cora. ~ ~ Cora is free software: you can redistribute it and/or modify 
	~ it under the terms of the GNU General Public License as published by ~ 
	the Free Software Foundation, either version 3 of the License, or ~ (at your 
	option) any later version. ~ ~ Cora is distributed in the hope that it will 
	be useful, ~ but WITHOUT ANY WARRANTY; without even the implied warranty 
	of ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ~ GNU General 
	Public License for more details. ~ ~ You should have received a copy of the 
	GNU General Public License ~ along with Cora. If not, see <http://www.gnu.org/licenses />. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>se.uu.ub.cora</groupId>
		<artifactId>cora-parent</artifactId>
		<version>1.1.1</version>
	</parent>

	<artifactId>jsclient</artifactId>
	<version>1.9-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>JS Client for Cora</name>

	<properties>
<!-- 		<maven.compiler.source>12</maven.compiler.source> -->
<!-- 		<maven.compiler.target>12</maven.compiler.target> -->
		<sonar.language>js</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.sources>src/main/webapp/script</sonar.sources>
		<sonar.tests>src/test/script/</sonar.tests>
		<sonar.exclusions>src/main/webapp/script/lib/**</sonar.exclusions>
		<sonar.testExecutionReportPaths>target/generated-resources/xml/xslt/karma-junit.xml</sonar.testExecutionReportPaths>
		<sonar.javascript.lcov.reportPaths>jsReportFromDocker/coverage/firefox/lcov.info,jsReportFromDocker/coverage/chromium/lcov.info</sonar.javascript.lcov.reportPaths>
		<sonar.nodejs.executable>${project.build.directory}/nodeJs/node/node</sonar.nodejs.executable>
		<docker.keepRunning>false</docker.keepRunning>
		<docker.keepContainer>false</docker.keepContainer>
		<docker.verbose>true</docker.verbose>
		<docker.buildArg.sut_path>${project.basedir}</docker.buildArg.sut_path>
<!-- 		<docker.buildArg.uid>1001</docker.buildArg.uid> -->
<!-- 		<docker.buildArg.gid>1001</docker.buildArg.gid> -->
		<docker.buildArg.uid>1000</docker.buildArg.uid>
		<docker.buildArg.gid>1000</docker.buildArg.gid>
		<frontend-maven-plugin.version>1.10.0</frontend-maven-plugin.version>
		<docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		
		
		<outputDirectory>${project.build.directory}/docker2</outputDirectory>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		
	</properties>


	<scm>
		<connection>scm:git:https://github.com/lsu-ub-uu/cora-jsclient.git</connection>
		<developerConnection>scm:git:https://github.com/lsu-ub-uu/cora-jsclient.git</developerConnection>
		<url>https://github.com/lsu-ub-uu/cora-jsclient.git</url>
		<tag>HEAD</tag>
	</scm>

	<profiles>
		<profile>
			<id>karma-test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.githug.eirslett</groupId>
							<artifactId>frontend-maven-plugin</artifactId>
							<version>${frontend-maven-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>io.fabric8</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker-maven-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>xml-maven-plugin</artifactId>
							<version>${xml-maven-plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<configuration>
							<installDirectory>${project.build.directory}/nodeJs</installDirectory>
							<workingDirectory>${project.build.directory}/nodeJs</workingDirectory>
							<skip>${maven.test.skip}</skip>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<phase>verify</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v14.3.0</nodeVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<phase>verify</phase>
								<goals>
									<goal>npm</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.github.eirslett</groupId>
								<artifactId>frontend-maven-plugin</artifactId>
								<version>${frontend-maven-plugin.version}</version>
							</dependency>
						</dependencies>
					</plugin>
<!-- 					<plugin> -->
<!-- 						<groupId>io.fabric8</groupId> -->
<!-- 						<artifactId>docker-maven-plugin</artifactId> -->
<!-- 						<configuration> -->
<!-- 							<images> -->
<!-- 								<image> -->
<!-- 									<alias>karma</alias> -->
<!-- 									<name>karma-test-browser:latest</name> -->
<!-- 									<build> -->
<!-- 										<contextDir>${project.basedir}</contextDir> -->
<!-- 										<dockerFile>Dockerfile</dockerFile> -->
<!-- 									</build> -->
<!-- 									<run> -->
<!-- 										<net>bridge</net> -->
<!-- 										<volumes> -->
<!-- 											<bind> -->
<!-- 												<volume>/home/olov/workspace/cora-eclipse:/home/pere</volume> -->
<!-- 											</bind> -->
<!-- 										</volumes> -->
<!-- 										<log> -->
<!-- 											<date>default</date> -->
<!-- 										</log> -->
<!-- 										<wait> -->
<!-- 											<time>120000</time> -->
<!-- 											<exit>0</exit> -->
<!-- 										</wait> -->
<!-- 									</run> -->
<!-- 								</image> -->
<!-- 							</images> -->
<!-- 						</configuration> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<id>Build karma docker and run tests</id> -->
<!-- 								<phase>pre-integration-test</phase> -->
<!-- 								<phase>none</phase> -->
<!-- 								<goals> -->
<!-- 									"build" should be used to create the images with the artifact -->
<!-- 									<goal>build</goal> -->
<!-- 									<goal>start</goal> -->
<!-- 								</goals> -->
<!-- 							</execution> -->
<!-- 							<execution> -->
<!-- 								<id>Stop karma container</id> -->
<!-- 								<phase>post-integration-test</phase> -->
<!-- 								<phase>none</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>stop</goal> -->
<!-- 								</goals> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>docker</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
						<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<!-- Remove existing image from local repo -->
					<!-- <execution> -->
					<!-- <id>docker-clean</id> -->
					<!-- <phase>install</phase> -->
					<!-- <goals> -->
					<!-- <goal>exec</goal> -->
					<!-- </goals> -->
					<!-- <configuration> -->
					<!-- <executable>docker</executable> -->
					<!-- <workingDirectory>${project.basedir}</workingDirectory> -->
					<!-- <arguments> -->
					<!-- <argument>rmi</argument> -->
					<!-- <argument>${project.groupId}/${project.artifactId}:${project.version}</argument> -->
					<!-- </arguments> -->
					<!-- </configuration> -->
					<!-- </execution> -->

					<!-- Create new docker image using Dockerfile which must be present 
						in current working directory. Tag the image using maven project version information. -->
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
<!-- 							<workingDirectory>${outputDirectory}</workingDirectory> -->
							<arguments>
								<argument>build</argument>
								<argument>-t</argument>
								<argument>${project.artifactId}:${project.version}</argument>
								<argument>--build-arg</argument>
								<argument>CORA_DOCKER_VERSION=${cora-docker-tomcat.version}</argument>
								<argument>--build-arg</argument>
								<argument>uid=1000</argument>
								<argument>--build-arg</argument>
								<argument>gid=1000</argument>
								<argument>.</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-build2</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
<!-- 							<workingDirectory>${outputDirectory}</workingDirectory> -->
							<arguments>
								<argument>run</argument>
<!-- 								<argument>-t</argument> -->
								<argument>--name</argument>
								<argument>myJsClientContainer</argument>
<!-- 								<argument>-v${project.basedir}:/home/pere</argument> -->
								<argument>${project.artifactId}:${project.version}</argument>
<!-- 								<argument>.</argument> -->
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-build3</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
<!-- 							<workingDirectory>${outputDirectory}</workingDirectory> -->
							<arguments>
								<argument>cp</argument>
								<argument>myJsClientContainer:/workspace/jsReportFromDocker</argument>
								<argument>target</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-build4</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>rm</argument>
								<argument>myJsClientContainer</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>xml-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>transform</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<transformationSets>
								<transformationSet>
<!-- 									<dir>reports/tests</dir> -->
									<dir>target/jsReportFromDocker/test</dir>
									<stylesheet>genericReport.xsl</stylesheet>
								</transformationSet>
							</transformationSets>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>net.sf.saxon</groupId>
								<artifactId>saxon</artifactId>
								<version>8.7</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>skip-karma-tests</id>
			<build>
			</build>
		</profile>
	</profiles>
</project>
